version: '3.8'

services:
  fastapi_ylab:
    container_name: fastapi_ylab
    build:
      context: .
      dockerfile: Dockerfile-main
    entrypoint: sh -c "alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 8000"
    networks:
      - ylab_network
    ports:
      - "8000:8000"
    depends_on:
        postgres_ylab:
          condition: service_healthy
        redis_ylab:
          condition: service_healthy

  postgres_ylab:
    container_name: postgres_ylab
    image: postgres:15.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ylab
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      PGUSER: postgres
    expose:
      - 5432
    ports:
      - "5432:5432"
    networks:
      - ylab_network
    healthcheck:
      test: [ "CMD-SHELL", 'pg_isready', '-U', 'postgres', '-d', 'ylab' ]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s

  redis_ylab:
    container_name: redis_ylab
    image: "redis:latest"
    ports:
      - "6379:6379"
    networks:
      - ylab_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  rabbitmq_ylab:
    container_name: rabbitmq_ylab
    image: "rabbitmq:3.13-rc"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - "5672:5672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - ylab_network



  celery_ylab:
    container_name: celery_ylab
    build:
      context: .
      dockerfile: Dockerfile-celery
    entrypoint: sh -c "celery -A celery_conf.celery_app worker --loglevel=info & celery -A celery_conf.celery_app beat --loglevel=info"
    networks:
      - ylab_network
    depends_on:
        postgres_ylab:
          condition: service_healthy
        redis_ylab:
          condition: service_healthy
        rabbitmq_ylab:
          condition: service_healthy


networks:
  ylab_network:
    name: ylab_network
volumes:
  postgres_data:
